%YAML 1.1
--- 
StructureVersion: "1.0"
Properties: 
  RUID: 151049506_187967073
  Name: "GS.Зарплата.Пролог.Общие"
  Caption: "Общие"
  Version: "1.0.0.9"
  Optional: False
  Internal: True
  MD5: BA8836DCD125011D55993B5F32EC947F
Objects: 
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 151158415_5956463
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      OBJECTNAME: "APPLICATION"
      MODULE: "CONST"
      LANGUAGE: "VBScript"
      NAME: "pl_Const"
      COMMENT: ~
      SCRIPT: | 
        Option Explicit
        'Константы и переменные Prolog
        
        Public Const scrPrologModuleName = "PROLOG"
        
        'TERM-TYPE CONSTANTS
        Public Const PL_VARIABLE = 1
        Public Const PL_ATOM = 2
        Public Const PL_INTEGER = 3
        Public Const PL_FLOAT = 4
        Public Const PL_STRING = 5
        Public Const PL_TERM = 6
        '
        
        'for Function wg_Prolog
        Public wg_Prolog_
        Set wg_Prolog_ = Nothing
        '
        
        ' global switch fo debug
        Public Const plGlobalDebug = True
        '
        
      DISPLAYSCRIPT: ~
      MODIFYDATE: ~
      OWNERNAME: ~
      FUNCTIONTYPE: ~
      EVENT: ~
      LOCALNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      GROUPNAME: ~
      MODULECODE: "1010001_17 APPLICATION"
      ENTEREDPARAMS: ~
      INHERITEDRULE: 0
      USEDEBUGINFO: 0
      EDITIONDATE: 2014-08-25T13:49:28+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 151158419_5956463
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      OBJECTNAME: "APPLICATION"
      MODULE: "UNKNOWN"
      LANGUAGE: "VBScript"
      NAME: "pl_GetScriptIDByName"
      COMMENT: ~
      SCRIPT: | 
        Option Explicit
        
        'uses pl_Const
        Function pl_GetScriptIDByName(Name)
          Dim Creator, ibsql
        
          pl_GetScriptIDByName = 0
        
          Set Creator = New TCreator
          Set ibsql = Creator.GetObject(nil, "TIBSQL", "")
        
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          ibsql.SQL.TEXT = _
              "SELECT * FROM gd_function" & _
              " WHERE UPPER(name) = UPPER(:name) AND module = :module"
          ibsql.ParamByName("name").AsString = Name
          ibsql.ParamByName("module").AsString = scrPrologModuleName
          ibsql.ExecQuery
        
          If Not ibsql.EOF Then
             pl_GetScriptIDByName = ibsql.FieldByName("id").AsInteger
          End If
        End Function
        
      DISPLAYSCRIPT: | 
        PL_GETSCRIPTIDBYNAME
        
      MODIFYDATE: ~
      OWNERNAME: ~
      FUNCTIONTYPE: ~
      EVENT: ~
      LOCALNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      GROUPNAME: ~
      MODULECODE: "1010001_17 APPLICATION"
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QEAAAATkFNRQQAAABOQU1FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      INHERITEDRULE: 0
      USEDEBUGINFO: 0
      EDITIONDATE: 2013-10-11T16:45:28+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 528612033_99701464
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      OBJECTNAME: "APPLICATION"
      MODULE: "VBCLASSES"
      LANGUAGE: "VBScript"
      NAME: "Twg_Prolog"
      COMMENT: ~
      SCRIPT: | 
        Option Explicit
        
        Class Twg_Prolog
        '
          Private VarSyncField
          
          Private Sub Class_Initialize
            VarSyncField = "PrologSyncField"
          End Sub
        
          Private Sub Class_Terminate
            Set wg_Prolog_ = Nothing
          End Sub
          
          Public Sub SyncField(ByRef Sender, ByVal Allow)
            If Not Sender.VariableExists(VarSyncField) Then
              Sender.AddVariableItem(VarSyncField)
              Sender.Variables(VarSyncField) = False
            End If
            '
            Sender.Variables(VarSyncField) = Allow
          End Sub
          
          Public Function SyncField_Name(ByRef Sender, ByVal FieldName)
            If Not Sender.VariableExists(VarSyncField) Then
              Sender.AddVariableItem(VarSyncField)
              Sender.Variables(VarSyncField) = False
            End If
            '
            If Sender.Variables(VarSyncField) = True Then
              SyncField_Name = ""
            Else
              SyncField_Name = FieldName
            End If
          End Function
        '
        End Class
        
      DISPLAYSCRIPT: ~
      MODIFYDATE: ~
      OWNERNAME: ~
      FUNCTIONTYPE: ~
      EVENT: ~
      LOCALNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      GROUPNAME: ~
      MODULECODE: "1010001_17 APPLICATION"
      ENTEREDPARAMS: ~
      INHERITEDRULE: 0
      USEDEBUGINFO: 0
      EDITIONDATE: 2014-03-26T13:36:06+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 528612032_99701464
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      OBJECTNAME: "APPLICATION"
      MODULE: "UNKNOWN"
      LANGUAGE: "VBScript"
      NAME: "wg_Prolog"
      COMMENT: ~
      SCRIPT: | 
        Option Explicit
        
        Function wg_Prolog
          If Not Assigned(wg_Prolog_) Then
            Set wg_Prolog_ = New Twg_Prolog
          end if
        
          Set wg_Prolog = wg_Prolog_
        End Function
        
      DISPLAYSCRIPT: | 
        WG_PROLOG
        
      MODIFYDATE: ~
      OWNERNAME: ~
      FUNCTIONTYPE: ~
      EVENT: ~
      LOCALNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      GROUPNAME: ~
      MODULECODE: "1010001_17 APPLICATION"
      ENTEREDPARAMS: ~
      INHERITEDRULE: 0
      USEDEBUGINFO: 0
      EDITIONDATE: 2014-03-26T11:57:22+03:00